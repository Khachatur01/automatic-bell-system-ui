{
    "root": true,
    "ignorePatterns": [
        "projects/**/*"
    ],
    "overrides": [
        {
            "files": [
                "*.ts"
            ],
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:@typescript-eslint/strict",
                "plugin:@typescript-eslint/stylistic",
                "plugin:@angular-eslint/recommended",
                "plugin:@angular-eslint/template/process-inline-templates"
            ],
            "plugins": [
                "@stylistic"
            ],
            "parserOptions": {
                "project": "tsconfig.json"
            },
            "rules": {
                "@angular-eslint/directive-selector": [
                    "error",
                    {
                        "type": "attribute",
                        "prefix": "app",
                        "style": "camelCase"
                    }
                ],
                "@angular-eslint/component-selector": [
                    "error",
                    {
                        "type": "element",
                        "prefix": ["page", "widget", "feature"],
                        "style": "kebab-case"
                    }
                ],
                "@typescript-eslint/no-namespace": "off",

                "array-callback-return": "error",
                "no-await-in-loop": "error",
                "no-constructor-return": "error",
                "no-duplicate-imports": "error",
                "no-inner-declarations": "error",
                "no-promise-executor-return": "error",
                "no-self-compare": "error",
                "no-template-curly-in-string": "warn",
                "no-unreachable-loop": "error",
                "no-use-before-define": "error",
                "require-atomic-updates": "error",
                "camelcase": "error",
                "class-methods-use-this": "error",
                "curly": "error",
                "semi": "error",
                "default-case-last": "error",
                "default-param-last": "error",
                "eqeqeq": "error",
                "func-names": "error",
                "grouped-accessor-pairs": "error",
                "guard-for-in": "error",
                "no-alert": "error",
                "no-array-constructor": "error",
                "no-case-declarations": "error",
                "no-delete-var": "error",
                "no-empty": "warn",
                "no-empty-static-block": "error",
                "no-eq-null": "error",
                "no-eval": "error",
                "no-extra-label": "error",
                "no-lone-blocks": "error",
                "no-lonely-if": "warn",
                "no-negated-condition": "error",
                "no-new-func": "error",
                "no-new-wrappers": "error",
                "no-nonoctal-decimal-escape": "error",
                "no-object-constructor": "error",
                "no-param-reassign": "error",
                "no-proto": "error",
                "no-return-assign": "error",
                "no-script-url": "error",
                "no-throw-literal": "error",
                "no-undef-init": "error",
                "no-unneeded-ternary": "error",
                "no-unused-expressions": "warn",
                "no-useless-call": "error",
                "no-useless-computed-key": "error",
                "no-useless-concat": "error",
                "no-useless-rename": "error",
                "no-useless-return": "error",
                "no-var": "error",
                "no-void": "error",
                "no-warning-comments": "warn",
                "object-shorthand": "warn",
                "operator-assignment": "error",
                "prefer-arrow-callback": "error",
                "prefer-const": "error",
                "prefer-exponentiation-operator": "error",
                "prefer-named-capture-group": "error",
                "prefer-object-has-own": "error",
                "prefer-object-spread": "error",
                "prefer-promise-reject-errors": "error",
                "prefer-regex-literals": "error",
                "prefer-rest-params": "error",
                "prefer-spread": "error",
                "prefer-template": "error",
                "radix": "error",
                "require-unicode-regexp": "error",
                "symbol-description": "error",

                "@stylistic/quotes": [
                    "error",
                    "single",
                    {
                        "avoidEscape": true,
                        "allowTemplateLiterals": true
                    }
                ],
                "@stylistic/array-bracket-newline": ["error", "consistent"],
                "@stylistic/array-bracket-spacing": ["error", "always"],
                "@stylistic/arrow-parens": ["error", "always"],
                "@stylistic/arrow-spacing": ["error", { "before": true, "after": true }],
                "@stylistic/block-spacing": ["error", "always"],
                "@stylistic/brace-style": ["error", "1tbs", { "allowSingleLine": true }],
                "@stylistic/comma-dangle": ["error", {
                    "arrays": "always",
                    "objects": "always",
                    "imports": "never",
                    "exports": "never",
                    "functions": "never"
                }],
                "@stylistic/comma-spacing": ["error", { "before": false, "after": true }],
                "@stylistic/comma-style": ["error", "last"],
                "@stylistic/computed-property-spacing": ["error", "never"],
                "@stylistic/dot-location": ["error", "property"],
                "@stylistic/eol-last": ["error", "always"],
                "@stylistic/function-call-argument-newline": ["error", "consistent"],
                "@stylistic/function-call-spacing": ["error", "never"],
                "@stylistic/function-paren-newline": ["error", "consistent"],
                "@stylistic/generator-star-spacing": ["error", "after"],
                "@stylistic/key-spacing": ["error", { "beforeColon": false, "afterColon": true }],
                "@stylistic/keyword-spacing": ["error", {
                    "before": true, "after": true, "overrides": {
                        "super": { "after": false },
                        "this": { "after": false }
                    }
                }],
                "@stylistic/max-statements-per-line": ["error", { "max":  1 }],
                "@stylistic/member-delimiter-style": ["error"],
                "@stylistic/new-parens": ["error", "always"],
                "@stylistic/newline-per-chained-call": ["error"],
                "@stylistic/no-extra-semi": ["error"],
                "@stylistic/no-floating-decimal": ["error"],
                "@stylistic/no-mixed-spaces-and-tabs": ["error"],
                "@stylistic/no-multi-spaces": ["error"],
                "@stylistic/no-multiple-empty-lines": ["error", {"max":  2}],
                "@stylistic/no-tabs": ["error"],
                "@stylistic/no-trailing-spaces": ["error"],
                "@stylistic/no-whitespace-before-property": ["error"],
                "@stylistic/nonblock-statement-body-position": ["error"],
                "@stylistic/object-curly-newline": ["error", { "consistent": true }],
                "@stylistic/object-curly-spacing": ["error", "always"],
                "@stylistic/one-var-declaration-per-line": ["error", "always"],
                "@stylistic/operator-linebreak": ["error", "after"],
                "@stylistic/rest-spread-spacing": ["error", "never"],
                "@stylistic/semi-spacing": ["error", { "before": false, "after": true }],
                "@stylistic/semi-style": ["error", "last"],
                "@stylistic/space-before-blocks": ["error"],
                "@stylistic/space-before-function-paren": ["error", "never"],
                "@stylistic/space-infix-ops": ["error", { "int32Hint": false }],
                "@stylistic/space-unary-ops": ["error", {"words": true, "nonwords": false}],
                "@stylistic/spaced-comment": ["error", "always"],
                "@stylistic/switch-colon-spacing": ["error", {"after": true, "before": false}],
                "@stylistic/template-curly-spacing": ["error", "always"],
                "@stylistic/template-tag-spacing": ["error", "always"],
                "@stylistic/type-annotation-spacing": ["error", { "before": false, "after": true }],
                "@stylistic/type-generic-spacing": ["error"],
                "@stylistic/type-named-tuple-spacing": ["error"],
                "@stylistic/wrap-iife": ["error", "outside"],
                "@stylistic/yield-star-spacing": ["error", "after"],
                "@typescript-eslint/no-non-null-assertion": "off",
                "@typescript-eslint/no-extraneous-class": "off",
                "@typescript-eslint/explicit-function-return-type": "error",
                "@typescript-eslint/explicit-member-accessibility": "error",
                "@typescript-eslint/explicit-module-boundary-types": "error",
                "@typescript-eslint/adjacent-overload-signatures": "error",
                "@typescript-eslint/member-ordering": [
                    "error",
                    {
                        "default": {
                            "memberTypes": [
                                // Index signature
                                "signature",
                                "call-signature",

                                // Fields

                                "public-abstract-field",
                                "public-field",
                                "public-decorated-field",
                                "public-instance-field",
                                "public-static-field",

                                "protected-abstract-field",
                                "protected-field",
                                "protected-decorated-field",
                                "protected-instance-field",
                                "protected-static-field",

                                "private-field",
                                "#private-field",
                                "private-decorated-field",
                                "private-instance-field",
                                "#private-instance-field",
                                "private-static-field",
                                "#private-static-field",

                                "abstract-field",
                                "field",
                                "decorated-field",
                                "instance-field",
                                "static-field",

                                // Static initialization
                                "static-initialization",

                                // Constructors
                                "public-constructor",
                                "protected-constructor",
                                "private-constructor",

                                "constructor",

                                // Accessors

                                "public-abstract-accessor",
                                "public-accessor",
                                "public-decorated-accessor",
                                "public-instance-accessor",
                                "public-static-accessor",

                                "protected-abstract-accessor",
                                "protected-accessor",
                                "protected-decorated-accessor",
                                "protected-instance-accessor",
                                "protected-static-accessor",

                                "private-accessor",
                                "#private-accessor",
                                "private-decorated-accessor",
                                "private-instance-accessor",
                                "#private-instance-accessor",
                                "private-static-accessor",
                                "#private-static-accessor",

                                "abstract-accessor",
                                "accessor",
                                "decorated-accessor",
                                "instance-accessor",
                                "static-accessor",

                                // Getters

                                //                                "public-abstract-get",
                                //                                "public-decorated-get",
                                //                                "public-static-get",
                                //                                "public-instance-get",
                                //
                                //                                "protected-abstract-get",
                                //                                "protected-decorated-get",
                                //                                "protected-instance-get",
                                //                                "protected-static-get",
                                //
                                //                                "private-decorated-get",
                                //                                "private-instance-get",
                                //                                "#private-instance-get",
                                //                                "private-static-get",
                                //                                "#private-static-get",
                                //
                                //                                "public-get",
                                //                                "protected-get",
                                //                                "private-get",
                                //                                "#private-get",
                                //
                                //                                "abstract-get",
                                //                                "get",
                                //                                "decorated-get",
                                //                                "instance-get",
                                //                                "static-get",
                                //
                                //                                // Setters
                                //
                                //                                "public-abstract-set",
                                //                                "public-set",
                                //                                "public-decorated-set",
                                //                                "public-instance-set",
                                //                                "public-static-set",
                                //
                                //                                "protected-abstract-set",
                                //                                "protected-set",
                                //                                "protected-decorated-set",
                                //                                "protected-instance-set",
                                //                                "protected-static-set",
                                //
                                //                                "private-set",
                                //                                "#private-set",
                                //                                "private-decorated-set",
                                //                                "private-instance-set",
                                //                                "#private-instance-set",
                                //                                "private-static-set",
                                //                                "#private-static-set",
                                //
                                //                                "abstract-set",
                                //                                "set",
                                //                                "decorated-set",
                                //                                "instance-set",
                                //                                "static-set",

                                // Methods

                                "public-abstract-method",
                                "public-method",
                                "public-decorated-method",
                                "public-instance-method",
                                "public-static-method",

                                "protected-abstract-method",
                                "protected-method",
                                "protected-decorated-method",
                                "protected-instance-method",
                                "protected-static-method",

                                "private-method",
                                "#private-method",
                                "private-decorated-method",
                                "private-instance-method",
                                "#private-instance-method",
                                "private-static-method",
                                "#private-static-method",

                                "abstract-method",
                                "method",
                                "decorated-method",
                                "instance-method",
                                "static-method"
                            ]
                        }
                    }
                ],
                "@typescript-eslint/array-type": "error",
                "@typescript-eslint/no-restricted-types": "error",
                "@typescript-eslint/consistent-type-assertions": "error",
                "@typescript-eslint/no-array-delete": "error",
                "@typescript-eslint/no-confusing-non-null-assertion": "error",
                "@typescript-eslint/no-confusing-void-expression": "error",
                "@typescript-eslint/no-duplicate-enum-values": "error",
                "@typescript-eslint/no-duplicate-type-constituents": "error",
                "@typescript-eslint/no-explicit-any": "error",
                "@typescript-eslint/no-extra-non-null-assertion": "error",
                "@typescript-eslint/no-floating-promises": "error",
                "@typescript-eslint/no-invalid-void-type": "error",
                "@typescript-eslint/no-meaningless-void-operator": "error",
                "@typescript-eslint/no-misused-new": "error",
                "@typescript-eslint/no-mixed-enums": "error",
                "@typescript-eslint/no-redundant-type-constituents": "error",
                "@typescript-eslint/no-require-imports": "error",
                "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
                //                "@typescript-eslint/no-unnecessary-condition": "error",
                "@typescript-eslint/no-unnecessary-qualifier": "error",
                "@typescript-eslint/no-unnecessary-type-assertion": "error",
                "@typescript-eslint/no-unnecessary-type-constraint": "error",
                "@typescript-eslint/no-unsafe-argument": "error",
                "@typescript-eslint/no-unsafe-assignment": "error",
                "@typescript-eslint/no-unsafe-call": "error",
                "@typescript-eslint/no-unsafe-declaration-merging": "error",
                "@typescript-eslint/no-unsafe-enum-comparison": "error",
                "@typescript-eslint/no-unsafe-member-access": "error",
                "@typescript-eslint/no-unsafe-return": "error",
                "@typescript-eslint/no-unsafe-unary-minus": "error",
                "@typescript-eslint/no-useless-empty-export": "error",
                "@typescript-eslint/no-unnecessary-template-expression": "error",
                "@typescript-eslint/no-var-requires": "error",
                "@typescript-eslint/no-inferrable-types": "off",
                "@typescript-eslint/non-nullable-type-assertion-style": "error",
                "@typescript-eslint/prefer-find": "error",
                "@typescript-eslint/prefer-for-of": "error",
                "@typescript-eslint/prefer-includes": "error",
                "@typescript-eslint/prefer-literal-enum-member": "error",
                "@typescript-eslint/prefer-optional-chain": "error",
                "@typescript-eslint/prefer-readonly": "error",
                "@typescript-eslint/prefer-reduce-type-parameter": "error",
                "@typescript-eslint/prefer-return-this-type": "error",
                "@typescript-eslint/prefer-string-starts-ends-with": "error",
                "@typescript-eslint/promise-function-async": "error",
                "@typescript-eslint/switch-exhaustiveness-check": "error",
                "@typescript-eslint/typedef": [
                    "error",
                    {
                        "arrayDestructuring": true,
                        "arrowParameter": true,
                        "memberVariableDeclaration": true,
                        "objectDestructuring": true,
                        "parameter": true,
                        "propertyDeclaration": true,
                        "variableDeclaration": true,
                        "variableDeclarationIgnoreFunction": true
                    }
                ]
            }
        },
        {
            "files": [
                "*.html"
            ],
            "extends": [
                "plugin:@angular-eslint/template/recommended",
                "plugin:@angular-eslint/template/accessibility"
            ],
            "rules": {}
        }
    ]
}
